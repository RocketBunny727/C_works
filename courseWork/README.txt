----------------------------------------------------------------------------------------------------------------------------------------
Курсовая работа по программированию (ПОМС) Вариант#6
Работу выполнил студент 1-го курса группы ИА - 231 Гузенков Семён Кириллович
----------------------------------------------------------------------------------------------------------------------------------------
Инструкция

1. О программе
Программа позволяет расчитать оптимальную загрузку рюкзака со значением максимальной нагрузки задаваемой пользователем. Массы вещей 
также задаются пользователем при этом их колличество не вводится а подсчитывается программой.

2. Компоненты программы
Все файлы программы находятся в папке "courseWork", изначально в ней лежит основной файл "backpack.c" сборщик "Makefile" и инструкция 
"README.txt", после сборки исполняемого файла в этой папке будет находится испольняемый файл "backpack.exe", а также может находится 
выбранная для сборки библиотека. В папке "Program Files" лежат заголовочный файл "header.h" и файл с функциями программы "components.c"
без которых сборка исполняемого файла невозможна.

3. Сборка программы
Сборка и компиляция программы проводится с помощью утилиты "Make". В папке courseWork находится файл с названием Makefile, являющийся
набором целей.Если вам не требуется создавать библиотеку вы должны прописать в консоли "make noLib", после чего начнется компиляция 
программы без создания библиотек. Для создания статической библиотеке необходимо прописать команду "make static". Утилита пропишет все 
необходимые команды за вас и результатом будет библиотека "libSTATIC.a" и исполняемый файл "backpack.exe", лежащие в этой же папке. 
Также предусмотрено создание динамической библиотеки "libDYNAMIC.so" и файла "backpack.exe" командой "make dynamic", соответственно.
Обратите внимание на то, что для сборки исполняемого файла необходимо наличие заголовочного файла "header.h" и файла "components.c" в 
папке "Program Files". В случае их отсутствия сборка и компиляция программы будет невозможна.

4. Запуск
После сборки можно запустить исполняемый файл, для этого пропишите команду "./backpack.exe" в консоли. Также стоит учесть то, что 
программа использует аргументы командной строки в качестве входных данных. Их следует прописывать через пробел после "./backpack.exe"
в формате: <максимальная нагрузка рюкзака> <вес вещи#1> <цена вещи#1> ... <вес вещи#n> <цена вещи #n> при последовательности из n 
вещей. 
Пример:

            ./backpack.exe 50 20 100 30 200

Входные данные в данном случае будут следующими: максимальная нагрузка рюкзака = 50; вес вещи#1 = 20; цена вещи#1 = 100; 
вес вещи#2 = 30; цена вещи#2 = 100; n = 2. Число n не вводится а подсчитывается программой, пользователю требуется лишь ввести 
последовательность в заданном формате, не задумываясь о числе.
Если у какой то вещи будет задан вес но не будет задана цена, программа выдаст ошибку о неправильном формате ввода данных.

5. Вывод данных
При корректном запуске программы и вводе данных в консоль выведится список всех введенных пользователем вещей, а также меню работы
программы, в котором можно выбрать необходимый алгоритм.
Пример:

            ======================ВВДЕННЫЕ-ДАННЫЕ=======================
            Максимальная загрузка рюкзака: 50
            Вещь#1: вес - 20 цена - 100
            Вещь#2: вес - 30 цена - 100
            ============================МЕНЮ============================
            Выберите алгоритм работы программы:
            1. Наивный рюкзак
            2. Алгоритм Meet-in-the-middle
            3. Оба алгоритма
            Чтобы продолжить нажмите соответствующую клавишу
            Ваш выбор:
            =============================================================

Для выбора необходимо нажать клавишу от 1 до 3, согласно пунктов меню. После выбора программа начнет работу, согласно выбранному 
алгоритму. Результатом работы является оптимальная цена набора вещей, который можно уместить в рюкзаке, согласно значению максимальной 
загрузки рюкзака. Также алгоритм "Наивный рюкзак" предусматривает вывод номеров взятых в набор вещей и их общий вес. Также программа 
выводит в консоль время работы алгоритмов.
Пример:

            ======================ВВДЕННЫЕ-ДАННЫЕ=======================
            Максимальная загрузка рюкзака: 50
            Вещь#1: вес - 20 цена - 100
            Вещь#2: вес - 30 цена - 100
            ============================МЕНЮ============================
            Выберите алгоритм работы программы:
            1. Наивный рюкзак
            2. Алгоритм Meet-in-the-middle
            3. Оба алгоритма
            Чтобы продолжить нажмите соответствующую клавишу
            Ваш выбор: 3
            =======================НАИВНЫЙ-РЮКЗАК=======================
            Оптимальное содержимое рюкзака: Вещь#1 Вещь#2 
            Оптимальный вес = 50; Оптимальная цена = 200;
            =====================MEET-IN-THE-MIDDLE=====================
            Оптимальная цена набора = 200;
            ===========================ВРЕМЯ============================
            Время работы алгоритма 'Наивный рюкзак': 0.000003 секунд
            Время работы алгоритма Meet-in-the-middle: 0.000002 секунд
            ============================================================

6. Очистка папки
После завершения работы с программой можно провести очистку папки командой "make clean", которая удалит все созданные 
библиотеки и объектные файлы, находящиеся в папке "Program Files", а также исполняемый файл "backpack.exe".
----------------------------------------------------------------------------------------------------------------------------------------